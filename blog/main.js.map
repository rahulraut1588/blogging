{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth.component.html","webpack:///./src/app/auth/auth.component.ts","webpack:///./src/app/common/auth.service.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<my-home class=\\\"home\\\" *ngIf=\\\"loggedIn\\\"></my-home>\\n<my-auth *ngIf=\\\"!loggedIn\\\"></my-auth>\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\nimport { AuthService } from './common/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  loggedIn = false;\n\n  constructor (public auth:AuthService) { \n\n  }\n\n  ngOnInit () {\n    // var mod = localStorage.getItem('name');\n    var userId = localStorage.getItem('userId');\n    console.log(userId);\n    if ( userId ) {\n      this.loggedIn = true;\n    }\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { AuthComponent } from './auth/auth.component';\nimport { HomeComponent } from './home/home.component';\nimport { AuthService } from './common/auth.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AuthComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [ AuthService ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"main back-grad\\\" *ngIf=\\\"!loggedIn\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"auth back-light-grey\\\">\\n            <div class=\\\"left-col\\\"> \\n                <h1 class=\\\"color-blue font-50 font-lobster mt-30\\\"><span class=\\\"color-white\\\">Blog</span>Park</h1>\\n                <div style=\\\"height: 50px\\\"></div>\\n                <p class=\\\"color-white font-40\\\"> Blog Park Registration Form </p>\\n                <p class=\\\"color-white\\\"> This is a free responsive registration form made with Bootstrap. Download it on AZMIND, customize and use it as you like! </p>\\n            </div>\\n            <div class=\\\"right-col\\\">\\n                <form #loginform=\\\"ngForm\\\" (submit)=\\\"loginSubmit(loginform.value)\\\" *ngIf=\\\"formFlag\\\">\\n                    <p class=\\\"font-40 mt-30\\\"> Sign In Now! </p>\\n                    <p class=\\\"font-18\\\"> Fill in the form below to access your content: </p>\\n                    <hr style=\\\"border-color: #aaa; margin-bottom: 40px;\\\" />\\n                    <input type=\\\"email\\\" ngModel placeholder=\\\"Email Address\\\" name=\\\"email\\\" (change)=\\\"logEmailKey($event)\\\" />\\n                    <input type=\\\"password\\\" ngModel placeholder=\\\"Password\\\" name=\\\"password\\\" autocomplete=\\\"off\\\" />\\n                    <div class=\\\"text-center mt-30\\\">\\n                        <button type=\\\"submit\\\" class=\\\"back-pink color-white\\\" ng-disabled=\\\"buttonDisabled\\\" > Login </button> &nbsp;\\n                        <button type=\\\"button\\\" class=\\\"back-blue color-white\\\" (click)=\\\"changeFlag()\\\"> Not A User </button>\\n                    </div>\\n                </form>\\n                <form #regForm=\\\"ngForm\\\" (submit)=\\\"regSubmit(regForm.value)\\\" *ngIf=\\\"!formFlag\\\">\\n                    <p class=\\\"font-40\\\"> Sign Up Now! </p>\\n                    <p class=\\\"font-18\\\"> Fill in the form below to get instant access: </p>\\n                    <hr style=\\\"border-color: #aaa; margin-bottom: 40px;\\\" />\\n                    <input type=\\\"text\\\" ngModel placeholder=\\\"Full Name\\\" name=\\\"name\\\" />\\n                    <input type=\\\"email\\\" ngModel placeholder=\\\"Email Addres\\\" name=\\\"email\\\" (change)=\\\"regEmailKey($event)\\\" />\\n                    <input type=\\\"password\\\" ngModel placeholder=\\\"Password\\\" name=\\\"password\\\" autocomplete=\\\"off\\\" />\\n                    <input type=\\\"password\\\" ngModel placeholder=\\\"Confirm Password\\\" name=\\\"confirmPassword\\\" autocomplete=\\\"off\\\" />\\n                    <div class=\\\"text-center mt-30\\\">\\n                        <button type=\\\"submit\\\" class=\\\"back-pink color-white\\\"> Register </button> &nbsp;\\n                        <button type=\\\"button\\\" class=\\\"back-blue color-white\\\" (click)=\\\"changeFlag()\\\"> Already A User </button>\\n                    </div>\\n                </form>\\n            </div>                \\n        </div>\\n    </div>\\n</div>\"","import { Component } from '@angular/core';\nimport { AuthService } from '../common/auth.service';\n\n@Component ({\n    selector: 'my-auth',\n    templateUrl: './auth.component.html'\n})\n\nexport class AuthComponent {\n    formFlag = true;\n    buttonDisabled = false;\n    checkEmail: any;\n\n    constructor (public auth:AuthService) { }\n\n    changeFlag() {\n        this.formFlag = (this.formFlag) ? false : true;\n    }\n\n    loginSubmit(loginData) {\n        this.auth.getLoggedIn(loginData).subscribe( (res) => {\n            if ( res.stat == 200 ) {\n                let userData = res.body[0];\n                localStorage.setItem('userId', userData._id);\n                localStorage.setItem('username', userData.username);\n                localStorage.setItem('name', userData.name);\n                localStorage.setItem('email', userData.email);\n                window.location.reload();\n            } else {\n                alert(\"User Not Found\")\n            }\n        });\n    }\n\n    regSubmit(regData) {\n        this.auth.postUser(regData).subscribe( (res) => {\n            window.location.reload();\n        });\n    }\n\n    regEmailKey(event) {\n        let emailData = {\n            email: event.target.value\n        }\n        this.auth.checkEmail(emailData).subscribe( (emailCheck) => {\n            this.checkEmail = emailCheck;\n            if ( this.checkEmail.message == 'found' ) { \n                alert(\"User already Exist\"); \n            }     \n        });\n    }\n\n    logEmailKey(event) {\n        let emailData = {\n            email: event.target.value\n        }\n        this.auth.checkEmail(emailData).subscribe( (emailCheck) => {\n            this.checkEmail = emailCheck;\n            if ( this.checkEmail.message == 'found' ) { \n                this.buttonDisabled = true;\n            } else {\n                alert(\"User Dosen't Exist\"); \n            }        \n        });\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable ()\n\nexport class AuthService {\n\n    listData: any; \n    userData:any;\n    specificUserId:any;\n    loggedInUser: any;\n\n    constructor(private http:HttpClient) { }\n\n    options = { \n        headers: new HttpHeaders({ 'Content-Type': 'application/json' }) \n    }\n\n    getLoggedIn (formData):Observable<any> {\n        formData = JSON.stringify(formData);\n        this.loggedInUser  = this.http.post('http://localhost:8000/api/login', formData, this.options);\n        return this.loggedInUser;\n    }\n\n    checkEmail(email) {\n        email = JSON.stringify(email);\n        let checkedEmail  = this.http.post('http://localhost:8000/api/users', email, this.options);\n        return checkedEmail;\n    }\n\n    postUser (formData: any):Observable<any> {\n        formData = JSON.stringify(formData);\n        this.userData  = this.http.post('http://localhost:8000/api/adduser', formData, this.options);\n        return this.userData;\n    }\n\n}","module.exports = \"<div class=\\\"p-15 text-right\\\">\\n    <button type=\\\"submit\\\" class=\\\"back-pink color-white\\\" (click)=\\\"logoutButton()\\\"> Logout </button>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component ({\n    selector: 'my-home',\n    templateUrl: './home.component.html'\n})\n\nexport class HomeComponent {\n    \n    logoutButton() {\n        localStorage.setItem('userId', '');\n        localStorage.setItem('name', '');\n        localStorage.setItem('email', '');\n        window.location.reload();\n    }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}